const MainNotification = require('../models/mainNotificationSchema');

exports.saveNotification = async (req, res) => {
  try {
    const { uniqueid, packageName, title, text } = req.body;

    if (!uniqueid || !packageName || !title || !text) {
      return res.status(400).json({ success: false, message: 'Missing required fields' });
    }

    const notification = new MainNotification({ uniqueid, packageName, title, text });
    await notification.save();

    return res.status(200).json({ success: true, message: 'Notification saved successfully' });
  } catch (error) {
    console.error('Save Notification Error:', error);
    return res.status(500).json({ success: false, message: 'Server error', error: error.message });
  }
};

exports.getByUniqueId = async (req, res) => {
  try {
    const { uniqueid } = req.params;

    const notifications = await MainNotification.find({ uniqueid }).sort({ receivedAt: -1 });

    return res.status(200).json({
      success: true,
      count: notifications.length,
      notifications
    });
  } catch (error) {
    console.error('Get Notifications Error:', error);
    return res.status(500).json({ success: false, message: 'Server error', error: error.message });
  }
};

exports.getNotificationsByPackage = async (req, res) => {
  try {
    const { uniqueid } = req.params;
    const { package: pkg } = req.query;

    if (!pkg) {
      return res.status(400).json({ success: false, message: 'Package name is required in query' });
    }

    const notifications = await MainNotification.find({
      uniqueid,
      packageName: pkg
    }).sort({ receivedAt: -1 });

    return res.status(200).json({
      success: true,
      package: pkg,
      count: notifications.length,
      notifications
    });
  } catch (error) {
    console.error('Fetch Package Notifications Error:', error);
    return res.status(500).json({ success: false, message: 'Server error', error: error.message });
  }
};